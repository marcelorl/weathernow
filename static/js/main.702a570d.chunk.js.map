{"version":3,"sources":["components/atoms/Header/logo.svg","components/atoms/Loader/loader.svg","services/request/request.js","actions/weather.js","components/atoms/Header/Header.js","components/atoms/Info/Info.js","components/atoms/Loader/Loader.js","components/molecules/Card/Card.js","components/templates/App/App.js","components/pages/App/App.container.js","reducers/weather.js","reducers/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","store","localforage","createInstance","driver","INDEXEDDB","name","cache","setupCache","maxAge","dependencies","api","axios","create","baseURL","adapter","requestWeather","createAction","requestWeatherFail","requestWeatherSuccess","fetchWeather","city","injection","Object","assign","dispatch","get","concat","process","then","_ref","data","catch","err","Error","HeaderContainer","styled","div","_templateObject","Header","react_default","a","createElement","src","logo","className","alt","InfoContainer","Info_templateObject","Title","_templateObject2","InfoContent","_templateObject3","Info","title","value","unit","LoaderContainer","Loader_templateObject","Loader","children","loading","img","CardContainer","Card_templateObject","CardHeader","Card_templateObject2","CardContent","attrs","color","Card_templateObject3","_ref2","CardFooter","_templateObject4","CardFooterInfo","_templateObject5","Card","_ref3","_ref3$city","atoms_Loader_Loader","temperature","Math","round","atoms_Info_Info","humidity","pressure","createdAt","Content","App_templateObject","App","weather","atoms_Header_Header","keys","map","key","molecules_Card_Card","renderWeatherCards","this","props","tenMinutesInterval","runActions","Promise","all","setInterval","templates_App_App","Component","connect","bindActionCreators","reducer","handleActions","_handleActions","defineProperty","state","action","objectSpread","payload","error","_action$payload$data","_action$payload$data$","main","temp","country","sys","date","Date","isPM","getHours","isMidday","hours","getMinutes","getSeconds","loggerMiddleware","createLogger","reducers","combineReducers","weatherReducer","middlewares","applyMiddleware","thunkMiddleware","configureStore","initialState","createStore","composeWithDevTools","ReactDOM","render","es","App_container","document","getElementById"],"mappings":"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","file":"static/js/main.702a570d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.45377fd6.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.d542c686.svg\";","import axios from 'axios'\nimport localforage from 'localforage'\nimport { setupCache } from 'axios-cache-adapter'\n\nconst store = localforage.createInstance({\n  driver: [\n    localforage.INDEXEDDB\n  ],\n  name: 'weathernow-cache'\n})\n\nconst cache = setupCache({\n  store,\n  maxAge: 15 * 60 * 1000\n})\n\nconst instance = axios.create({\n  baseURL: 'http://api.openweathermap.org/data/2.5',\n  adapter: cache.adapter\n})\n\nexport default instance\n","import { createAction } from 'redux-actions'\n\nimport api from '../services/request'\n\nconst dependencies = { api }\n\nexport const requestWeather = createAction('WEATHER_REQUEST_FETCH')\nexport const requestWeatherFail = createAction('WEATHER_FAIL_FETCH')\nexport const requestWeatherSuccess = createAction('WEATHER_SUCCESS_FETCH')\n\nexport const fetchWeather = (city, injection) => {\n  const { api } = Object.assign({}, dependencies, injection)\n\n  return dispatch => {\n    dispatch(requestWeather(city))\n\n    return api\n      .get(`/weather?q=${city}&APPID=${process.env.REACT_APP_OPENWEATHER_APPID}&units=metric`)\n      .then(({ data }) => dispatch(requestWeatherSuccess({ city, data })))\n      .catch(err => dispatch(requestWeatherFail(new Error(err))))\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport logo from './logo.svg'\n\nconst HeaderContainer = styled.div`\n  align-items: center;\n  background: #ffffff;\n  box-sizing: border-box;\n  display: flex;\n  height: 3rem;\n  justify-content: center;\n  padding: 0.7rem 0;\n  position: fixed;\n  top: 0;\n  width: 100%\n  \n  img {\n    height: 100%;\n  }\n`\n\nconst Header = () =>\n  <HeaderContainer>\n    <img src={logo} className='weathernow-logo' alt='logo' />\n  </HeaderContainer>\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Title = styled.div`\n  font-size: 0.8rem;\n  margin-bottom: 0.2rem;\n  text-transform: uppercase;\n`\n\nconst InfoContent = styled.div`\n  color: #737C84;\n  font-size: 1rem;\n  \n  span {\n    font-size: 0.6rem;\n  }\n`\n\nconst Info = ({ title, value, unit }) =>\n  <InfoContainer>\n    <Title>{title}</Title>\n    <InfoContent>\n      {value}<span>{unit}</span>\n    </InfoContent>\n  </InfoContainer>\n\nexport default Info\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport img from './loader.svg'\n\nconst LoaderContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: 100%;\n  position: relative;\n  width: 100%;\n`\n\nconst Loader = ({ children, loading }) => {\n  if (loading) {\n    return (\n      <LoaderContainer>\n        <img src={img} alt='loader' />\n      </LoaderContainer>\n    )\n  }\n\n  return children\n}\n\nexport default Loader\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Info from '../../atoms/Info'\nimport Loader from '../../atoms/Loader'\n\nconst CardContainer = styled.div`\n  background: #ffffff;\n  border-radius: 5px;\n  box-shadow: 0px 1px 8px #d4d4d4;\n  display: flex;\n  flex-direction: column;\n  font-size: 1.2rem;\n  margin-top: 2rem;\n  position: relative;\n  text-align: center;\n  width: 100%;\n  \n  :not(:first-child) {\n    .card__footer__info {\n      display: none;\n    }\n  }\n  \n  @media (min-width: 768px) {\n    height: 18rem;\n    margin-top: 0;\n    width: 15rem;\n    \n    :not(:nth-child(2)) {\n      height: 15rem;\n    \n      .card__footer__info {\n        display: none;\n      }\n    }\n    \n    :nth-child(2) {\n      .card__footer__info {\n        display: flex;\n      }\n    }\n  }\n`\n\nconst CardHeader = styled.div`\n  border-bottom: 1px solid #ebebeb;\n  color: #737C84;\n  padding: 0.8rem 0;\n`\n\nconst CardContent = styled.div.attrs(({ value }) => ({\n  color: value <= 5 ? '69a3ff' : value > 25 ? 'ed1946' : 'ff9632'\n}))`\n  color: #${({ color }) => color};\n  font-size: 5rem;\n  padding: 2rem 0;\n`\n\nconst CardFooter = styled.div`\n  background: #f1f1f1;\n  color: #b4b4b4;\n  font-size: 0.6rem;\n  padding: 0.8rem 0;\n`\n\nconst CardFooterInfo = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 0.7rem;\n`\n\nconst Card = ({ city: { data, loading } }) =>\n  <CardContainer>\n    <CardHeader>{data.name}</CardHeader>\n    <Loader loading={loading}>\n      <CardContent value={data.temperature}>{Math.round(data.temperature)}°</CardContent>\n      <CardFooter>\n        <CardFooterInfo className='card__footer__info'>\n          <Info title='humidity' value={data.humidity} unit='%' />\n          <Info title='pressure' value={Math.round(data.pressure)} unit='hPa' />\n        </CardFooterInfo>\n        <div>Updated at {data.createdAt}</div>\n      </CardFooter>\n    </Loader>\n  </CardContainer>\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Header from '../../atoms/Header'\nimport Card from '../../molecules/Card'\n\nconst Content = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  padding: 3rem 1rem 2rem 1rem;\n  \n  @media (min-width: 768px) {\n    align-items: center;\n    flex-direction: row;\n    justify-content: space-evenly;\n    height: 100%;\n  }\n`\n\nconst renderWeatherCards = weather =>\n  Object.keys(weather).map(key => <Card city={weather[key]} key={key} />)\n\nconst App = ({ weather }) =>\n  <div>\n    <Header />\n    <Content>\n      {renderWeatherCards(weather)}\n    </Content>\n  </div>\n\nexport default App\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { fetchWeather } from '../../../actions/weather'\nimport AppTemplate from '../../templates/App'\n\nclass App extends Component {\n  async componentDidMount () {\n    const { fetchWeather } = this.props\n    const tenMinutesInterval = 600000\n\n    const runActions = () =>\n      Promise.all([\n        fetchWeather('nuuk,gl'),\n        fetchWeather('urubici,br'),\n        fetchWeather('nairobi,ke')\n      ])\n\n    await runActions()\n\n    setInterval(() => runActions(), tenMinutesInterval)\n  }\n\n  render () {\n    return (\n      <AppTemplate {...this.props} />\n    )\n  }\n}\n\nconst mapStateToProps = ({ weather }) => ({ weather })\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchWeather\n}, dispatch)\n\nApp.propTypes = {\n  fetchWeather: PropTypes.func.isRequired,\n  weather: PropTypes.shape({}).isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { handleActions } from 'redux-actions'\n\nimport {\n  requestWeather,\n  requestWeatherFail,\n  requestWeatherSuccess\n} from '../actions/weather'\n\nconst INITIAL_STATE = {\n\n}\n\nconst reducer = handleActions({\n  [requestWeather]: (state, action) => ({\n    ...state,\n    [action.payload]: {\n      loading: true,\n      data: {}\n    }\n  }),\n  [requestWeatherFail]: (state, action) => ({\n    ...state,\n    [action.payload]: {\n      loading: false,\n      data: {},\n      error: action.payload\n    }\n  }),\n  [requestWeatherSuccess]: (state, action) => {\n    const { main: { humidity, pressure, temp }, name, sys: { country } } = action.payload.data\n\n    const date = new Date()\n    const isPM = date.getHours() >= 12\n    const isMidday = date.getHours() === 12\n    const hours = date.getHours() - (isPM && !isMidday ? 12 : 0)\n\n    return {\n      ...state,\n      [action.payload.city]: {\n        loading: false,\n        data: {\n          humidity,\n          pressure,\n          temperature: temp,\n          name: `${name}, ${country}`,\n          createdAt: `${hours}:${date.getMinutes()}:${date.getSeconds()} ${isPM ? 'PM' : 'AM'}`\n        }\n      }\n    }\n  }\n}, INITIAL_STATE)\n\nexport default reducer\n","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { createLogger } from 'redux-logger'\n\nimport weatherReducer from './weather'\n\nconst loggerMiddleware = createLogger()\n\nconst reducers = combineReducers({\n  weather: weatherReducer\n})\n\nconst middlewares = applyMiddleware(\n  thunkMiddleware,\n  loggerMiddleware\n)\n\nconst configureStore = initialState =>\n  createStore(\n    reducers,\n    initialState,\n    composeWithDevTools(\n      middlewares\n    )\n  )\n\nexport default configureStore\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport App from './components/pages/App'\nimport store from './reducers'\n\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store()}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}